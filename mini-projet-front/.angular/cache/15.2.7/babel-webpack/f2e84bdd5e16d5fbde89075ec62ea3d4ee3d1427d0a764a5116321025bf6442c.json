{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ResultatPrelevementService {\n  constructor(http) {\n    this.http = http;\n    this.backendHost = \"http://localhost:8080\";\n  }\n  getAllResultat(keyword, etat, page, size) {\n    let url = `${this.backendHost}/prelevement/personne?keyword=${keyword}&page=${page}&size=${size}&etat=${etat}`;\n    const token = localStorage.getItem(\"token\");\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      })\n    };\n    return this.http.get(url, httpOptions);\n  }\n  saveresultat(resultat) {\n    let url = `${this.backendHost}/resultatPrelevement`;\n    const token = localStorage.getItem(\"token\");\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      })\n    };\n    return this.http.post(url, resultat, httpOptions);\n  }\n  deleteResultat(id) {\n    return this.http.delete(`${this.backendHost}/resultatPrelevement/${id}`);\n  }\n}\nResultatPrelevementService.ɵfac = function ResultatPrelevementService_Factory(t) {\n  return new (t || ResultatPrelevementService)(i0.ɵɵinject(i1.HttpClient));\n};\nResultatPrelevementService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ResultatPrelevementService,\n  factory: ResultatPrelevementService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAoBA,WAAW,QAAO,sBAAsB;;;AAO5D,OAAM,MAAOC,0BAA0B;EAErCC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IADxB,gBAAW,GAAW,uBAAuB;EACL;EAEjCC,cAAc,CAACC,OAAe,EAAEC,IAAY,EAAEC,IAAY,EAAEC,IAAY;IAC7E,IAAIC,GAAG,GACL,GAAG,IAAI,CAACC,WAAW,iCAAiCL,OAAO,SAASE,IAAI,SAASC,IAAI,SAASF,IAAI,EAAE;IACtG,MAAMK,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,WAAW,GAAG;MAClBC,OAAO,EAAE,IAAIf,WAAW,CAAC;QACvB,cAAc,EAAG,kBAAkB;QACnC,eAAe,EAAE,SAAS,GAAGW;OAC9B;KACF;IACD,OAAO,IAAI,CAACR,IAAI,CAACa,GAAG,CAAmBP,GAAG,EAAEK,WAAW,CAAC;EAC1D;EAIKG,YAAY,CAACC,QAAgC;IAClD,IAAIT,GAAG,GAAW,GAAG,IAAI,CAACC,WAAW,sBAAsB;IAC3D,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,WAAW,GAAG;MAClBC,OAAO,EAAE,IAAIf,WAAW,CAAC;QACvB,cAAc,EAAG,kBAAkB;QACnC,eAAe,EAAE,SAAS,GAAGW;OAC9B;KACF;IACD,OAAO,IAAI,CAACR,IAAI,CAACgB,IAAI,CAACV,GAAG,EAAES,QAAQ,EAAEJ,WAAW,CAAC;EACnD;EACSM,cAAc,CAACC,EAAU;IAC9B,OAAO,IAAI,CAAClB,IAAI,CAACmB,MAAM,CAAC,GAAG,IAAI,CAACZ,WAAW,wBAAwBW,EAAE,EAAE,CAAC;EAC1E;;AAhCWpB,0BAA0B;mBAA1BA,0BAA0B;AAAA;AAA1BA,0BAA0B;SAA1BA,0BAA0B;EAAAsB,SAA1BtB,0BAA0B;EAAAuB,YAFzB;AAAM","names":["HttpHeaders","ResultatPrelevementService","constructor","http","getAllResultat","keyword","etat","page","size","url","backendHost","token","localStorage","getItem","httpOptions","headers","get","saveresultat","resultat","post","deleteResultat","id","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\P15S 1\\Desktop\\fronte\\mini-projet-front\\mini-projet-front\\src\\app\\services\\resultat-prelevement.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {ResultatPrelevementDtos, ResultatResponse} from \"../models/resultatPrelevement.model\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ResultatPrelevementService {\r\n  backendHost: string = \"http://localhost:8080\";\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public getAllResultat(keyword: string, etat: string, page: number, size: number): Observable<ResultatResponse> {\r\n    let url: string =\r\n      `${this.backendHost}/prelevement/personne?keyword=${keyword}&page=${page}&size=${size}&etat=${etat}`;\r\n    const token = localStorage.getItem(\"token\");\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n        'Authorization': 'Bearer ' + token\r\n      })\r\n    };\r\n    return this.http.get<ResultatResponse>(url, httpOptions);\r\n  }\r\n\r\n  \r\n  \r\npublic saveresultat(resultat:ResultatPrelevementDtos){\r\n  let url: string = `${this.backendHost}/resultatPrelevement`;\r\n  const token = localStorage.getItem(\"token\");\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type':  'application/json',\r\n      'Authorization': 'Bearer ' + token\r\n    })\r\n  };\r\n  return this.http.post(url, resultat, httpOptions)\r\n}\r\n  public deleteResultat(id: number) {\r\n    return this.http.delete(`${this.backendHost}/resultatPrelevement/${id}`);\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class LogGuard {\n  constructor(router) {\n    this.router = router;\n  }\n  canActivate(route, state) {\n    const jwt = localStorage.getItem('token');\n    if (jwt == null) {\n      return true;\n    } else {\n      const jwtData = jwt.split('.')[1];\n      let decodedJwtJsonData = window.atob(jwtData);\n      let decodedJwtData = JSON.parse(decodedJwtJsonData);\n      const expirationDate = new Date(decodedJwtData.exp * 1000);\n      if (expirationDate > new Date()) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\nLogGuard.ɵfac = function LogGuard_Factory(t) {\n  return new (t || LogGuard)(i0.ɵɵinject(i1.Router));\n};\nLogGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LogGuard,\n  factory: LogGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,QAAQ;EAEnBC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;EAC1B;EAEAC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IAC1B,MAAMC,GAAG,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACzC,IAAGF,GAAG,IAAI,IAAI,EAAE;MACd,OAAO,IAAI;KACZ,MAAI;MACH,MAAMG,OAAO,GAAGH,GAAG,CAACI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACjC,IAAIC,kBAAkB,GAAGC,MAAM,CAACC,IAAI,CAACJ,OAAO,CAAC;MAC7C,IAAIK,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACL,kBAAkB,CAAC;MACnD,MAAMM,cAAc,GAAS,IAAIC,IAAI,CAACJ,cAAc,CAACK,GAAG,GAAC,IAAI,CAAC;MAC9D,IAAIF,cAAc,GAAG,IAAIC,IAAI,EAAE,EAAE;QAC/B,OAAO,IAAI;;;IAGf,OAAO,KAAK;EACd;;AArBWlB,QAAQ;mBAARA,QAAQ;AAAA;AAARA,QAAQ;SAARA,QAAQ;EAAAoB,SAARpB,QAAQ;EAAAqB,YAFP;AAAM","names":["LogGuard","constructor","router","canActivate","route","state","jwt","localStorage","getItem","jwtData","split","decodedJwtJsonData","window","atob","decodedJwtData","JSON","parse","expirationDate","Date","exp","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\hp\\OneDrive\\Desktop\\Nouveau dossier (5)\\mini-projet-front\\mini-projet-front\\src\\app\\guards\\log.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogGuard implements CanActivate {\n\n  constructor(private router: Router) {\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const jwt = localStorage.getItem('token');\n    if(jwt == null) {\n      return true;\n    }else{\n      const jwtData = jwt.split('.')[1];\n      let decodedJwtJsonData = window.atob(jwtData);\n      let decodedJwtData = JSON.parse(decodedJwtJsonData);\n      const expirationDate: Date = new Date(decodedJwtData.exp*1000);\n      if (expirationDate > new Date()) {\n        return true;\n      }\n    }\n    return false;\n  }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
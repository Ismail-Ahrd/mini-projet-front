{"ast":null,"code":"import { AuthRequest } from \"../models/authRequest.model\";\nimport { BehaviorSubject, map } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthenticationService {\n  constructor(http) {\n    this.http = http;\n    this.backendHost = \"http://localhost:8080\";\n    this.booleanValue = new BehaviorSubject(false);\n  }\n  login(email, password) {\n    let url = `${this.backendHost}/authentication/authenticate`;\n    let request = new AuthRequest();\n    request.email = email;\n    request.password = password;\n    //console.log(request);\n    return this.http.post(url, request).pipe(map(response => {\n      const authResponse = JSON.parse(response);\n      return authResponse;\n    }));\n  }\n  register(registerRequest) {\n    let url = `${this.backendHost}/authentication/register`;\n    console.log(registerRequest);\n    return this.http.post(url, registerRequest).pipe();\n  }\n  getBooleanValue() {\n    return this.booleanValue.asObservable();\n  }\n  setBooleanValue(newValue) {\n    this.booleanValue.next(newValue);\n  }\n}\nAuthenticationService.ɵfac = function AuthenticationService_Factory(t) {\n  return new (t || AuthenticationService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthenticationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthenticationService,\n  factory: AuthenticationService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAQA,WAAW,QAAO,6BAA6B;AACvD,SAAQC,eAAe,EAAcC,GAAG,QAAO,MAAM;;;AAOrD,OAAM,MAAOC,qBAAqB;EAIhCC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,gBAAW,GAAW,uBAAuB;IAmCrC,iBAAY,GAAG,IAAIJ,eAAe,CAAU,KAAK,CAAC;EAjClB;EAEjCK,KAAK,CAACC,KAAa,EAAEC,QAAgB;IAC1C,IAAIC,GAAG,GAAW,GAAG,IAAI,CAACC,WAAW,8BAA8B;IACnE,IAAIC,OAAO,GAAgB,IAAIX,WAAW,EAAE;IAC5CW,OAAO,CAACJ,KAAK,GAAGA,KAAK;IACrBI,OAAO,CAACH,QAAQ,GAAGA,QAAQ;IAC3B;IAEA,OAAO,IAAI,CAACH,IAAI,CAACO,IAAI,CAAeH,GAAG,EAACE,OAAO,CAAC,CAACE,IAAI,CACnDX,GAAG,CAAEY,QAAa,IAAI;MACpB,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACH,QAAQ,CAAiB;MACzD,OAAOC,YAAY;IAAC,CAAC,CAAC,CAAC;EAI7B;EAGOG,QAAQ,CAACC,eAAgC;IAC9C,IAAIV,GAAG,GAAW,GAAG,IAAI,CAACC,WAAW,0BAA0B;IAC/DU,OAAO,CAACC,GAAG,CAACF,eAAe,CAAC;IAC5B,OAAO,IAAI,CAACd,IAAI,CAACO,IAAI,CAAeH,GAAG,EAACU,eAAe,CAAC,CAACN,IAAI,EAAC;EAEhE;EACAS,eAAe;IACb,OAAO,IAAI,CAACC,YAAY,CAACC,YAAY,EAAE;EACzC;EAEAC,eAAe,CAACC,QAAiB;IAC/B,IAAI,CAACH,YAAY,CAACI,IAAI,CAACD,QAAQ,CAAC;EAElC;;AApCWvB,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;SAArBA,qBAAqB;EAAAyB,SAArBzB,qBAAqB;EAAA0B,YAFpB;AAAM","names":["AuthRequest","BehaviorSubject","map","AuthenticationService","constructor","http","login","email","password","url","backendHost","request","post","pipe","response","authResponse","JSON","parse","register","registerRequest","console","log","getBooleanValue","booleanValue","asObservable","setBooleanValue","newValue","next","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\P15S 1\\Desktop\\fronte\\mini-projet-front\\mini-projet-front\\src\\app\\services\\authentication.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {AuthRequest} from \"../models/authRequest.model\";\r\nimport {BehaviorSubject, Observable, map} from \"rxjs\";\r\nimport {AuthResponse} from \"../models/authResponse.model\";\r\nimport {RegisterRequest} from \"../models/RegisterRequest.model\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n\r\n  backendHost: string = \"http://localhost:8080\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public login(email: string, password: string): Observable<AuthResponse> {\r\n    let url: string = `${this.backendHost}/authentication/authenticate`;\r\n    let request: AuthRequest = new AuthRequest();\r\n    request.email = email;\r\n    request.password = password;\r\n    //console.log(request);\r\n\r\n    return this.http.post<AuthResponse>(url,request).pipe(\r\n      map((response: any) => {\r\n        const authResponse = JSON.parse(response) as AuthResponse;\r\n        return authResponse;}))\r\n\r\n   \r\n    \r\n  }\r\n  \r\n\r\n  public register(registerRequest: RegisterRequest)  {\r\n    let url: string = `${this.backendHost}/authentication/register`;\r\n    console.log(registerRequest);\r\n    return this.http.post<AuthResponse>(url,registerRequest).pipe(\r\n     \r\n  }\r\n  getBooleanValue() {\r\n    return this.booleanValue.asObservable();\r\n  }\r\n\r\n  setBooleanValue(newValue: boolean) {\r\n    this.booleanValue.next(newValue);\r\n    \r\n  }\r\n  private booleanValue = new BehaviorSubject<boolean>(false);\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
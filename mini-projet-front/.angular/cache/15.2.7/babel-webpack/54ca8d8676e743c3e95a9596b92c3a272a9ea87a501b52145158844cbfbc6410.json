{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(router) {\n    this.router = router;\n  }\n  canActivate(route, state) {\n    const jwt = localStorage.getItem('token');\n    if (jwt == null) {\n      this.router.navigateByUrl(\"/\");\n      return false;\n    }\n    const jwtData = jwt.split('.')[1];\n    let decodedJwtJsonData = window.atob(jwtData);\n    let decodedJwtData = JSON.parse(decodedJwtJsonData);\n    const expirationDate = new Date(decodedJwtData.exp * 1000);\n    if (expirationDate < new Date()) {\n      this.router.navigateByUrl(\"/\");\n      return false;\n    }\n    return true;\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,SAAS;EAEpBC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;EAC1B;EAEAC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IAC1B,MAAMC,GAAG,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACzC,IAAGF,GAAG,IAAI,IAAI,EAAE;MACd,IAAI,CAACJ,MAAM,CAACO,aAAa,CAAC,GAAG,CAAC;MAC9B,OAAO,KAAK;;IAEd,MAAMC,OAAO,GAAGJ,GAAG,CAACK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,IAAIC,kBAAkB,GAAGC,MAAM,CAACC,IAAI,CAACJ,OAAO,CAAC;IAC7C,IAAIK,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACL,kBAAkB,CAAC;IACnD,MAAMM,cAAc,GAAS,IAAIC,IAAI,CAACJ,cAAc,CAACK,GAAG,GAAC,IAAI,CAAC;IAC9D,IAAIF,cAAc,GAAG,IAAIC,IAAI,EAAE,EAAE;MAC/B,IAAI,CAACjB,MAAM,CAACO,aAAa,CAAC,GAAG,CAAC;MAC9B,OAAO,KAAK;;IAEd,OAAO,IAAI;EACb;;AAtBWT,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAqB,SAATrB,SAAS;EAAAsB,YAFR;AAAM","names":["AuthGuard","constructor","router","canActivate","route","state","jwt","localStorage","getItem","navigateByUrl","jwtData","split","decodedJwtJsonData","window","atob","decodedJwtData","JSON","parse","expirationDate","Date","exp","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\hp\\OneDrive\\Desktop\\Nouveau dossier (5)\\mini-projet-front\\mini-projet-front\\src\\app\\guards\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router) {\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const jwt = localStorage.getItem('token');\n    if(jwt == null) {\n      this.router.navigateByUrl(\"/\");\n      return false;\n    }\n    const jwtData = jwt.split('.')[1];\n    let decodedJwtJsonData = window.atob(jwtData);\n    let decodedJwtData = JSON.parse(decodedJwtJsonData);\n    const expirationDate: Date = new Date(decodedJwtData.exp*1000);\n    if (expirationDate < new Date()) {\n      this.router.navigateByUrl(\"/\");\n      return false;\n    }\n    return true;\n  }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
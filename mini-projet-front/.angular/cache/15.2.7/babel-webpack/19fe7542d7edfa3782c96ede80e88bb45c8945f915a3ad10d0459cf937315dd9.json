{"ast":null,"code":"import { AuthRequest } from \"../models/authRequest.model\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthenticationService {\n  constructor(http) {\n    this.http = http;\n    this.backendHost = \"http://localhost:8080\";\n  }\n  login(email, password) {\n    let url = `${this.backendHost}/authentication/authenticate`;\n    let request = new AuthRequest();\n    request.email = email;\n    request.password = password;\n    //console.log(request);\n    return this.http.post(url, request);\n  }\n  register(registerRequest) {\n    let url = `${this.backendHost}/authentication/register`;\n    console.log(registerRequest);\n    return this.http.post(url, registerRequest);\n  }\n}\nAuthenticationService.ɵfac = function AuthenticationService_Factory(t) {\n  return new (t || AuthenticationService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthenticationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthenticationService,\n  factory: AuthenticationService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAQA,WAAW,QAAO,6BAA6B;;;AAQvD,OAAM,MAAOC,qBAAqB;EAGhCC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,gBAAW,GAAW,uBAAuB;EAEL;EAEjCC,KAAK,CAACC,KAAa,EAAEC,QAAgB;IAC1C,IAAIC,GAAG,GAAW,GAAG,IAAI,CAACC,WAAW,8BAA8B;IACnE,IAAIC,OAAO,GAAgB,IAAIT,WAAW,EAAE;IAC5CS,OAAO,CAACJ,KAAK,GAAGA,KAAK;IACrBI,OAAO,CAACH,QAAQ,GAAGA,QAAQ;IAC3B;IACA,OAAO,IAAI,CAACH,IAAI,CAACO,IAAI,CAAeH,GAAG,EAACE,OAAO,CAAC;EAClD;EAEOE,QAAQ,CAACC,eAAgC;IAC9C,IAAIL,GAAG,GAAW,GAAG,IAAI,CAACC,WAAW,0BAA0B;IAC/DK,OAAO,CAACC,GAAG,CAACF,eAAe,CAAC;IAC5B,OAAO,IAAI,CAACT,IAAI,CAACO,IAAI,CAAeH,GAAG,EAACK,eAAe,CAAC;EAC1D;;AAlBWX,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;SAArBA,qBAAqB;EAAAc,SAArBd,qBAAqB;EAAAe,YAFpB;AAAM","names":["AuthRequest","AuthenticationService","constructor","http","login","email","password","url","backendHost","request","post","register","registerRequest","console","log","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\P15S 1\\Desktop\\fronte\\mini-projet-front\\mini-projet-front\\src\\app\\services\\authentication.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {AuthRequest} from \"../models/authRequest.model\";\r\nimport {Observable} from \"rxjs\";\r\nimport {AuthResponse} from \"../models/authResponse.model\";\r\nimport {RegisterRequest} from \"../models/RegisterRequest.model\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n  backendHost: string = \"http://localhost:8080\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public login(email: string, password: string): Observable<AuthResponse> {\r\n    let url: string = `${this.backendHost}/authentication/authenticate`;\r\n    let request: AuthRequest = new AuthRequest();\r\n    request.email = email;\r\n    request.password = password;\r\n    //console.log(request);\r\n    return this.http.post<AuthResponse>(url,request);\r\n  }\r\n\r\n  public register(registerRequest: RegisterRequest)  {\r\n    let url: string = `${this.backendHost}/authentication/register`;\r\n    console.log(registerRequest);\r\n    return this.http.post<AuthResponse>(url,registerRequest);\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
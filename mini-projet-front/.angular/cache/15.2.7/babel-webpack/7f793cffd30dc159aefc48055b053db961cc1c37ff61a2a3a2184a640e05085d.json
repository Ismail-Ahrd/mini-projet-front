{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/authentication.service\";\nimport * as i3 from \"@angular/router\";\nexport class AuthFormComponent {\n  /*testForm: FormGroup = new FormGroup({\r\n    email: new FormControl(\"\", Validators.email)\r\n  })*/\n  constructor(fb, authService) {\n    this.fb = fb;\n    this.authService = authService;\n  }\n  ngOnInit() {\n    this.authFormGroup = this.fb.group({\n      email: this.fb.control(\"\"),\n      password: this.fb.control(\"\")\n    });\n  }\n  handleAuthentication() {\n    console.log(this.authFormGroup.value);\n    const email = this.authFormGroup.value.email;\n    const password = this.authFormGroup.value.password;\n    this.authService.login(email, password).subscribe({\n      next: data => {\n        console.log(data.token);\n        localStorage.setItem(\"token\", data.token);\n      },\n      error: err => {\n        console.log(err.message);\n      }\n    });\n    this.authFormGroup.reset();\n  }\n}\nAuthFormComponent.ɵfac = function AuthFormComponent_Factory(t) {\n  return new (t || AuthFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthenticationService));\n};\nAuthFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AuthFormComponent,\n  selectors: [[\"app-auth-form\"]],\n  decls: 9,\n  vars: 1,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"type\", \"email\", \"placeholder\", \"Adresse Email\", \"formControlName\", \"email\"], [\"type\", \"password\", \"placeholder\", \"Mot de passe\", \"formControlName\", \"password\"], [\"routerLink\", \"register\"]],\n  template: function AuthFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function AuthFormComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.handleAuthentication();\n      });\n      i0.ɵɵelementStart(1, \"h1\");\n      i0.ɵɵtext(2, \"S'identifier\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"input\", 1)(4, \"input\", 2);\n      i0.ɵɵelementStart(5, \"button\");\n      i0.ɵɵtext(6, \"connexion\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"a\", 3);\n      i0.ɵɵtext(8, \"Cr\\u00E9er un compte?\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.authFormGroup);\n    }\n  },\n  dependencies: [i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"form[_ngcontent-%COMP%] {\\r\\n  border: solid #CCCCCC 2px;\\r\\n  border-top: solid #6095C1 7px;\\r\\n  width: 400px;\\r\\n  height: 350px;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: center;\\r\\n  justify-content: space-around;\\r\\n}\\r\\n\\r\\nh1[_ngcontent-%COMP%] {\\r\\n  color: #6095C1;\\r\\n}\\r\\n\\r\\ninput[_ngcontent-%COMP%] {\\r\\n  width: 73%;\\r\\n  height: 35px;\\r\\n  margin-bottom: 10px;\\r\\n  padding: 5px 10px;\\r\\n  ackground: #F9F9F9;\\r\\n  border: 2px solid #CCCCCC;\\r\\n  border-radius: 10px;\\r\\n  font-size: 16px;\\r\\n}\\r\\n\\r\\n\\r\\nbutton[_ngcontent-%COMP%] {\\r\\n  font-weight: 400;\\r\\n  font-size: 20px;\\r\\n  color: white;\\r\\n  padding: 7px 14px;\\r\\n  background: #6095C1;\\r\\n  border-radius: 10px;\\r\\n  border: none;\\r\\n}\\r\\n\\r\\nbutton[_ngcontent-%COMP%]:hover {\\r\\n  opacity: 0.9;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\na[_ngcontent-%COMP%] {\\r\\n  text-decoration: none;\\r\\n  color: #7CABE1;\\r\\n  border-bottom: solid #7CABE1 1px;\\r\\n  margin-bottom: 10px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hdXRoLWZvcm0vYXV0aC1mb3JtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx5QkFBeUI7RUFDekIsNkJBQTZCO0VBQzdCLFlBQVk7RUFDWixhQUFhO0VBQ2IsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixtQkFBbUI7RUFDbkIsNkJBQTZCO0FBQy9COztBQUVBO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFLFVBQVU7RUFDVixZQUFZO0VBQ1osbUJBQW1CO0VBQ25CLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIseUJBQXlCO0VBQ3pCLG1CQUFtQjtFQUNuQixlQUFlO0FBQ2pCOzs7QUFHQTtFQUNFLGdCQUFnQjtFQUNoQixlQUFlO0VBQ2YsWUFBWTtFQUNaLGlCQUFpQjtFQUNqQixtQkFBbUI7RUFDbkIsbUJBQW1CO0VBQ25CLFlBQVk7QUFDZDs7QUFFQTtFQUNFLFlBQVk7RUFDWixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UscUJBQXFCO0VBQ3JCLGNBQWM7RUFDZCxnQ0FBZ0M7RUFDaEMsbUJBQW1CO0FBQ3JCIiwic291cmNlc0NvbnRlbnQiOlsiZm9ybSB7XHJcbiAgYm9yZGVyOiBzb2xpZCAjQ0NDQ0NDIDJweDtcclxuICBib3JkZXItdG9wOiBzb2xpZCAjNjA5NUMxIDdweDtcclxuICB3aWR0aDogNDAwcHg7XHJcbiAgaGVpZ2h0OiAzNTBweDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcclxufVxyXG5cclxuaDEge1xyXG4gIGNvbG9yOiAjNjA5NUMxO1xyXG59XHJcblxyXG5pbnB1dCB7XHJcbiAgd2lkdGg6IDczJTtcclxuICBoZWlnaHQ6IDM1cHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICBwYWRkaW5nOiA1cHggMTBweDtcclxuICBhY2tncm91bmQ6ICNGOUY5Rjk7XHJcbiAgYm9yZGVyOiAycHggc29saWQgI0NDQ0NDQztcclxuICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gIGZvbnQtc2l6ZTogMTZweDtcclxufVxyXG5cclxuXHJcbmJ1dHRvbiB7XHJcbiAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICBmb250LXNpemU6IDIwcHg7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIHBhZGRpbmc6IDdweCAxNHB4O1xyXG4gIGJhY2tncm91bmQ6ICM2MDk1QzE7XHJcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICBib3JkZXI6IG5vbmU7XHJcbn1cclxuXHJcbmJ1dHRvbjpob3ZlciB7XHJcbiAgb3BhY2l0eTogMC45O1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuYSB7XHJcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gIGNvbG9yOiAjN0NBQkUxO1xyXG4gIGJvcmRlci1ib3R0b206IHNvbGlkICM3Q0FCRTEgMXB4O1xyXG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAUA,OAAM,MAAOA,iBAAiB;EAE5B;;;EAIAC,YAAoBC,EAAe,EAAUC,WAAkC;IAA3D,OAAE,GAAFD,EAAE;IAAuB,gBAAW,GAAXC,WAAW;EACxD;EAEAC,QAAQ;IACN,IAAI,CAACC,aAAa,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MACjCC,KAAK,EAAE,IAAI,CAACL,EAAE,CAACM,OAAO,CAAC,EAAE,CAAC;MAC1BC,QAAQ,EAAE,IAAI,CAACP,EAAE,CAACM,OAAO,CAAC,EAAE;KAC7B,CAAC;EACJ;EAEAE,oBAAoB;IAClBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,aAAa,CAACQ,KAAK,CAAC;IACrC,MAAMN,KAAK,GAAG,IAAI,CAACF,aAAa,CAACQ,KAAK,CAACN,KAAK;IAC5C,MAAME,QAAQ,GAAG,IAAI,CAACJ,aAAa,CAACQ,KAAK,CAACJ,QAAQ;IAClD,IAAI,CAACN,WAAW,CAACW,KAAK,CAACP,KAAK,EAACE,QAAQ,CAAC,CAACM,SAAS,CAAC;MAC/CC,IAAI,EAAEC,IAAI,IAAG;QACXN,OAAO,CAACC,GAAG,CAACK,IAAI,CAACC,KAAK,CAAC;QACvBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,IAAI,CAACC,KAAK,CAAC;MAC3C,CAAC;MAAEG,KAAK,EAAEC,GAAG,IAAG;QACdX,OAAO,CAACC,GAAG,CAACU,GAAG,CAACC,OAAO,CAAC;MAC1B;KACD,CAAC;IACF,IAAI,CAAClB,aAAa,CAACmB,KAAK,EAAE;EAC5B;;AA7BWxB,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAyB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV9BC,+BAAsE;MAApCA;QAAA,OAAYC,0BAAsB;MAAA,EAAC;MACnED,0BAAI;MAAAA,4BAAY;MAAAA,iBAAK;MACrBA,2BAAwE;MAExEA,8BAAQ;MAAAA,yBAAS;MAAAA,iBAAS;MAC1BA,4BAAyB;MAAAA,qCAAgB;MAAAA,iBAAI;;;MALzCA,6CAA2B","names":["AuthFormComponent","constructor","fb","authService","ngOnInit","authFormGroup","group","email","control","password","handleAuthentication","console","log","value","login","subscribe","next","data","token","localStorage","setItem","error","err","message","reset","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\P15S 1\\Desktop\\fronte\\mini-projet-front\\mini-projet-front\\src\\app\\components\\auth-form\\auth-form.component.ts","C:\\Users\\P15S 1\\Desktop\\fronte\\mini-projet-front\\mini-projet-front\\src\\app\\components\\auth-form\\auth-form.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {AuthenticationService} from \"../../services/authentication.service\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\n\r\n@Component({\r\n  selector: 'app-auth-form',\r\n  templateUrl: './auth-form.component.html',\r\n  styleUrls: ['./auth-form.component.css']\r\n})\r\nexport class AuthFormComponent implements OnInit{\r\n  authFormGroup!: FormGroup;\r\n  /*testForm: FormGroup = new FormGroup({\r\n    email: new FormControl(\"\", Validators.email)\r\n  })*/\r\n\r\n  constructor(private fb: FormBuilder, private authService: AuthenticationService ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.authFormGroup = this.fb.group({\r\n      email: this.fb.control(\"\"),\r\n      password: this.fb.control(\"\")\r\n    });\r\n  }\r\n\r\n  handleAuthentication() {\r\n    console.log(this.authFormGroup.value);\r\n    const email = this.authFormGroup.value.email;\r\n    const password = this.authFormGroup.value.password;\r\n    this.authService.login(email,password).subscribe({\r\n      next: data => {\r\n        console.log(data.token);\r\n        localStorage.setItem(\"token\", data.token);\r\n      }, error: err => {\r\n        console.log(err.message);\r\n      }\r\n    })\r\n    this.authFormGroup.reset();\r\n  }\r\n\r\n\r\n}\r\n","<form [formGroup]=\"authFormGroup\" (ngSubmit)=\"handleAuthentication()\">\r\n  <h1>S'identifier</h1>\r\n  <input type=\"email\" placeholder=\"Adresse Email\" formControlName=\"email\">\r\n  <input type=\"password\"placeholder=\"Mot de passe\" formControlName=\"password\">\r\n  <button>connexion</button>\r\n  <a routerLink=\"register\">Créer un compte?</a>\r\n</form>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
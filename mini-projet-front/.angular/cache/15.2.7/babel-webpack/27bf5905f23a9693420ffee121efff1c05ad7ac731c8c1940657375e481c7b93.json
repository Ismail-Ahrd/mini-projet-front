{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./authentication.service\";\nexport class ResultatPrelevementService {\n  constructor(http, authService) {\n    this.http = http;\n    this.authService = authService;\n    this.backendHost = \"http://localhost:8080\";\n  }\n  getAllResultat(page, size) {\n    let idPersonne;\n    this.authService.getDecodeToken().subscribe({\n      next: data => {\n        idPersonne = data.idPersonne;\n        console.log(idPersonne);\n      },\n      error: err => console.log(err)\n    });\n    let type;\n    this.authService.getDecodeToken().subscribe({\n      next: data => {\n        type = data.type;\n        console.log(type);\n      },\n      error: err => console.log(err)\n    });\n    let url;\n    if (type === \"AGENT_CONTROLE\") {\n      url = `${this.backendHost}/resultatPrelevement/personne/prelevement/${idPersonne}?page=${page}&size=${size}`;\n    } else {\n      url = `${this.backendHost}/resultatPrelevement/personne/${idPersonne}?page=${page}&size=${size}`;\n    }\n    const token = localStorage.getItem(\"token\");\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      })\n    };\n    return this.http.get(url, httpOptions);\n  }\n  saveresultat(resultat) {\n    let url = `${this.backendHost}/resultatPrelevement`;\n    const token = localStorage.getItem(\"token\");\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      })\n    };\n    return this.http.post(url, resultat, httpOptions);\n  }\n  deleteResultat(id) {\n    return this.http.delete(`${this.backendHost}/resultatPrelevement/${id}`);\n  }\n  saveDetailNonConformite(detail) {\n    let url = `${this.backendHost}/detailNonConformite`;\n    const token = localStorage.getItem(\"token\");\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      })\n    };\n    return this.http.post(url, detail, httpOptions);\n  }\n  getDetailNonConformite(idResultat) {\n    let url = `${this.backendHost}/detailNonConformite/resultat/${idResultat}`;\n    const token = localStorage.getItem(\"token\");\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      })\n    };\n    return this.http.get(url, httpOptions);\n  }\n}\nResultatPrelevementService.ɵfac = function ResultatPrelevementService_Factory(t) {\n  return new (t || ResultatPrelevementService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthenticationService));\n};\nResultatPrelevementService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ResultatPrelevementService,\n  factory: ResultatPrelevementService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAoBA,WAAW,QAAO,sBAAsB;;;;AAS5D,OAAM,MAAOC,0BAA0B;EAErCC,YAAoBC,IAAgB,EAAUC,WAAkC;IAA5D,SAAI,GAAJD,IAAI;IAAsB,gBAAW,GAAXC,WAAW;IADzD,gBAAW,GAAW,uBAAuB;EACuC;EAE7EC,cAAc,CAACC,IAAY,EAAEC,IAAY;IAC9C,IAAIC,UAAU;IACd,IAAI,CAACJ,WAAW,CAACK,cAAc,EAAE,CAACC,SAAS,CAAC;MAC1CC,IAAI,EAAEC,IAAI,IAAG;QACXJ,UAAU,GAACI,IAAI,CAACJ,UAAU;QAC1BK,OAAO,CAACC,GAAG,CAACN,UAAU,CAAC;MACzB,CAAC;MACDO,KAAK,EAAEC,GAAG,IAAIH,OAAO,CAACC,GAAG,CAACE,GAAG;KAC9B,CAAC;IAEF,IAAIC,IAAI;IACR,IAAI,CAACb,WAAW,CAACK,cAAc,EAAE,CAACC,SAAS,CAAC;MAC1CC,IAAI,EAAEC,IAAI,IAAG;QACXK,IAAI,GAACL,IAAI,CAACK,IAAI;QACdJ,OAAO,CAACC,GAAG,CAACG,IAAI,CAAC;MACnB,CAAC;MACDF,KAAK,EAAEC,GAAG,IAAKH,OAAO,CAACC,GAAG,CAACE,GAAG;KAC/B,CAAC;IAEF,IAAIE,GAAG;IACP,IAAID,IAAI,KAAK,gBAAgB,EAAE;MAC7BC,GAAG,GAAG,GAAG,IAAI,CAACC,WAAW,6CAA6CX,UAAU,SAASF,IAAI,SAASC,IAAI,EAAE;KAC7G,MAAM;MACLW,GAAG,GAAE,GAAG,IAAI,CAACC,WAAW,iCAAiCX,UAAU,SAASF,IAAI,SAASC,IAAI,EAAE;;IAGjG,MAAMa,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,WAAW,GAAG;MAClBC,OAAO,EAAE,IAAIxB,WAAW,CAAC;QACvB,cAAc,EAAG,kBAAkB;QACnC,eAAe,EAAE,SAAS,GAAGoB;OAC9B;KACF;IACD,OAAO,IAAI,CAACjB,IAAI,CAACsB,GAAG,CAAmBP,GAAG,EAAEK,WAAW,CAAC;EAC1D;EAIOG,YAAY,CAACC,QAAgC;IAClD,IAAIT,GAAG,GAAW,GAAG,IAAI,CAACC,WAAW,sBAAsB;IAC3D,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,WAAW,GAAG;MAClBC,OAAO,EAAE,IAAIxB,WAAW,CAAC;QACvB,cAAc,EAAG,kBAAkB;QACnC,eAAe,EAAE,SAAS,GAAGoB;OAC9B;KACF;IACD,OAAO,IAAI,CAACjB,IAAI,CAACyB,IAAI,CAA0BV,GAAG,EAAES,QAAQ,EAAEJ,WAAW,CAAC;EAC5E;EAEOM,cAAc,CAACC,EAAU;IAC9B,OAAO,IAAI,CAAC3B,IAAI,CAAC4B,MAAM,CAAC,GAAG,IAAI,CAACZ,WAAW,wBAAwBW,EAAE,EAAE,CAAC;EAC1E;EAEOE,uBAAuB,CAACC,MAAc;IAC3C,IAAIf,GAAG,GAAW,GAAG,IAAI,CAACC,WAAW,sBAAsB;IAC3D,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,WAAW,GAAG;MAClBC,OAAO,EAAE,IAAIxB,WAAW,CAAC;QACvB,cAAc,EAAG,kBAAkB;QACnC,eAAe,EAAE,SAAS,GAAGoB;OAC9B;KACF;IACD,OAAO,IAAI,CAACjB,IAAI,CAACyB,IAAI,CAASV,GAAG,EAACe,MAAM,EAACV,WAAW,CAAC;EACvD;EAEOW,sBAAsB,CAACC,UAAkB;IAC9C,IAAIjB,GAAG,GAAW,GAAG,IAAI,CAACC,WAAW,iCAAiCgB,UAAU,EAAE;IAClF,MAAMf,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,WAAW,GAAG;MAClBC,OAAO,EAAE,IAAIxB,WAAW,CAAC;QACvB,cAAc,EAAG,kBAAkB;QACnC,eAAe,EAAE,SAAS,GAAGoB;OAC9B;KACF;IACD,OAAO,IAAI,CAACjB,IAAI,CAACsB,GAAG,CAASP,GAAG,EAACK,WAAW,CAAC;EAC/C;;AAhFWtB,0BAA0B;mBAA1BA,0BAA0B;AAAA;AAA1BA,0BAA0B;SAA1BA,0BAA0B;EAAAmC,SAA1BnC,0BAA0B;EAAAoC,YAFzB;AAAM","names":["HttpHeaders","ResultatPrelevementService","constructor","http","authService","getAllResultat","page","size","idPersonne","getDecodeToken","subscribe","next","data","console","log","error","err","type","url","backendHost","token","localStorage","getItem","httpOptions","headers","get","saveresultat","resultat","post","deleteResultat","id","delete","saveDetailNonConformite","detail","getDetailNonConformite","idResultat","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\hp\\OneDrive\\Desktop\\Nouveau dossier (5)\\mini-projet-front\\mini-projet-front\\src\\app\\services\\resultat-prelevement.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {ResultatPrelevementDtos, ResultatResponse} from \"../models/resultatPrelevement.model\";\r\nimport {AuthenticationService} from \"./authentication.service\";\r\nimport {Detail} from \"../models/detail.model\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ResultatPrelevementService {\r\n  backendHost: string = \"http://localhost:8080\";\r\n  constructor(private http: HttpClient, private authService: AuthenticationService) { }\r\n\r\n  public getAllResultat(page: number, size: number): Observable<ResultatResponse> {\r\n    let idPersonne;\r\n    this.authService.getDecodeToken().subscribe({\r\n      next: data => {\r\n        idPersonne=data.idPersonne;\r\n        console.log(idPersonne);\r\n      },\r\n      error: err => console.log(err)\r\n    });\r\n\r\n    let type;\r\n    this.authService.getDecodeToken().subscribe({\r\n      next: data => {\r\n        type=data.type;\r\n        console.log(type);\r\n      },\r\n      error: err =>  console.log(err);\r\n    });\r\n\r\n    let url;\r\n    if (type === \"AGENT_CONTROLE\") {\r\n      url = `${this.backendHost}/resultatPrelevement/personne/prelevement/${idPersonne}?page=${page}&size=${size}`;\r\n    } else {\r\n      url =`${this.backendHost}/resultatPrelevement/personne/${idPersonne}?page=${page}&size=${size}`;\r\n    }\r\n\r\n    const token = localStorage.getItem(\"token\");\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n        'Authorization': 'Bearer ' + token\r\n      })\r\n    };\r\n    return this.http.get<ResultatResponse>(url, httpOptions);\r\n  }\r\n\r\n  \r\n  \r\n  public saveresultat(resultat:ResultatPrelevementDtos): Observable<ResultatPrelevementDtos>{\r\n    let url: string = `${this.backendHost}/resultatPrelevement`;\r\n    const token = localStorage.getItem(\"token\");\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n        'Authorization': 'Bearer ' + token\r\n      })\r\n    };\r\n    return this.http.post<ResultatPrelevementDtos>(url, resultat, httpOptions);\r\n  }\r\n\r\n  public deleteResultat(id: number) {\r\n    return this.http.delete(`${this.backendHost}/resultatPrelevement/${id}`);\r\n  }\r\n\r\n  public saveDetailNonConformite(detail: Detail): Observable<Detail> {\r\n    let url: string = `${this.backendHost}/detailNonConformite`;\r\n    const token = localStorage.getItem(\"token\");\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n        'Authorization': 'Bearer ' + token\r\n      })\r\n    };\r\n    return this.http.post<Detail>(url,detail,httpOptions);\r\n  }\r\n\r\n  public getDetailNonConformite(idResultat: number): Observable<Detail> {\r\n    let url: string = `${this.backendHost}/detailNonConformite/resultat/${idResultat}`;\r\n    const token = localStorage.getItem(\"token\");\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n        'Authorization': 'Bearer ' + token\r\n      })\r\n    };\r\n    return this.http.get<Detail>(url,httpOptions);\r\n  }\r\n\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}